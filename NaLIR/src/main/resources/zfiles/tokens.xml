<?xml version="1.0" ?>
<!-- define tokens for dependency parse tree -->
<!-- all terms are in lower case -->
<types>
<!-- Command Token, verb -->
<CMT_V>

<!-- TEO ADDED -->
<phrase>what is
<example>What is the number of movies in which Jennifer Aniston acted after 2010?</example>
</phrase>
<phrase>who is
<example>Who is the director of the movie Catch me if you can?</example>
</phrase>
<phrase>who was
<example>Who was the director of the movie Catch me if you can?</example>
</phrase> 
<!-- TEO ADDED -->

<phrase>tell
<example>Tell me all the books published in year 1993.</example>
</phrase>
<phrase>give
<example>Give me all the books published in year 1993.</example>
</phrase>
<phrase>return
<example>Return all the books published in year 1993.</example>
</phrase>
<phrase>list
<example>List all the books published in year 1993.</example>
</phrase>
<phrase>find
<example>Find all the books published in year 1993.</example>
</phrase>
<phrase>show
<example>Show all the books published in year 1993.</example>
</phrase>
<phrase>retrieve
<example>Retrieve all the books published in year 1993.</example>
</phrase>
<phrase>display
<example>Display all the books published in year 1993.</example>
</phrase>
<phrase>search
<example>Search all the books published in year 1993.</example>
</phrase>
<phrase>select
<example>Select all the books published in year 1993.</example>
</phrase>

<!-- TODO: double check this -->
<phrase>produce
<example>Produce all the books published in year 1993.</example>
</phrase>
<phrase>generate</phrase>
<phrase>list</phrase>
</CMT_V>
<!-- Order By Token -->
<OBT>
<phrase>sort by
<example>Find all the books published by Ayn Rand, sorted by title.</example>
</phrase>
<phrase>order by
<example>Find all the books published by Ayn Rand, ordered by title.</example>
</phrase>
<phrase>
in the order of
</phrase>
</OBT>
<!-- Function Token, adjective -->
<FT>

<phrase>minimum
<function>min</function>
<example>Find the books with the minimum price.</example>
</phrase>
<phrase>most
<function>max</function>
</phrase>
<phrase>least
<function>min</function>
</phrase>
<phrase>earliest
<function>min</function>
<example>What is the book published by Ayn Rand with the earliest year?</example>
</phrase>
<phrase>smallest
<function>min</function>
<example>What is the book with the smallest number of authors?</example>
</phrase>
<phrase>lowest
<function>min</function>
<example>What is the book with the lowest price?</example>
</phrase>
<phrase>maximum
<function>max</function>
<example>What is the book with the maximum price?</example>
</phrase>
<phrase>latest
<function>max</function>
<example>What is the book published by Ayn Rand with the latest year? </example>
</phrase>
<phrase>largest
<function>max</function>
<example>What is the book with the largest number of authors?</example>
</phrase>
<phrase>highest
<function>max</function>
<example>What is the book with the highest price?</example>
</phrase>
<phrase>average
<function>avg</function>
<example>What is the average price of all the books published in 1995?</example>
</phrase>
<phrase>total
<function>sum</function>
<example>Find the books with a total of 5 authors.</example>
</phrase>
<phrase>number of
<function>count</function>
<example>Find the books, where the number of authors of each book is 5.</example>
</phrase>

<!-- Teo Added -->
<phrase>how many
    <function>count</function>
    <example>How many movies did Alfred Hitchcock direct.</example>
    </phrase>
    <phrase>count
    <function>count</function>
    <example>Count movies of brad pitt</example>
</phrase>
<!-- Teo Added -->
    

</FT>
<!-- Operator Token, adj -->
<OT>
<phrase>earlier
<operator>&lt;</operator>
<example>Find all the books of Ayn Rand, where the year of each book is earlier than the year of "Fountain Head".</example>
</phrase>
<phrase>later
<operator>&gt;</operator>
<example>Find all the books of Ayn Rand, where the year of each book is later than the year of "Fountain Head".</example>
</phrase>
<phrase>greater
<operator>&gt;</operator>
<example>Find all the books with greater than 2 editors.</example>
</phrase>
<phrase>above
<operator>&gt;</operator>
</phrase>
<phrase>below
<operator>&lt;</operator>
</phrase>
<phrase>more
<operator>&gt;</operator>
<example>Find all the books with more than 2 editors.</example>
</phrase>
<phrase>less
<operator>&lt;</operator>
<example>Find all the books with less than 5 authors.</example>
</phrase>
<phrase>larger
<operator>&gt;</operator>
<example>Find all the books, where the number of authors of each book is larger than 5.</example>
</phrase>
<phrase>smaller
<operator>&lt;</operator>
<example>Find all the books, where the number of authors of each book is smaller than 5.</example>
</phrase>
<phrase>higher
<operator>&gt;</operator>
<example>Find all the books, where the price of each book is higher than 100.</example>
</phrase>
<phrase>below
<operator>&lt;</operator>
<example>Find all the books, where the price of each book is lower than 5.</example>
</phrase>
<phrase>lower
<operator>&lt;</operator>
<example>Find all the books, where the price of each book is lower than 5.</example>
</phrase>
<phrase>at least
<operator>&gt;=</operator>
</phrase> 
<phrase>before
<operator>&lt;</operator>
<example>Find all the books by Ayn Rand published before 1949.</example>
</phrase>
<phrase>after
<operator>&gt;</operator>
<example>Find all the books published after 2004.</example>
</phrase>
<phrase>equal
<operator>=</operator>
<example>Find all the books of Ayn Rand, where the year of each book is equal to the year of "Fountain Head".</example>
</phrase>
<phrase>same
<operator>=</operator>
<example>Return the articles where the author is the same as the author of "Java and XML" </example>
</phrase>
<phrase>as many
<operator>=</operator>
</phrase>
</OT>
<!-- Qualifier Token -->
<QT>
<phrase>every
<quantity>all</quantity>
<example>Return all the books, where the name of every author of each book ends with "Green". </example>
</phrase>
<phrase>each
<quantity>each</quantity>
</phrase>
<phrase>all
<quantity>all</quantity>
</phrase>
<phrase>some
<quantity>any</quantity>
<example>Return all the books, where the name of some authors of each book ends with "Green". </example>
</phrase>
<phrase>any
<quantity>any</quantity>
</phrase>
</QT>
<!-- Negation Token -->
<NEG>
<phrase>not</phrase>
<phrase>no</phrase>
<phrase>didn't</phrase>
<phrase>doesn't</phrase>
<phrase>haven't</phrase>
<phrase>hasn't</phrase>
<phrase>nothing</phrase>
</NEG>
</types>
